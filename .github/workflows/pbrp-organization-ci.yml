name: PBRP Organization CI

on:
  workflow_dispatch:
    inputs:
      DEPLOY_TYPE:
        description: 'Deploy Type (TEST/BETA/OFFICIAL)'
        required: true
        default: 'TEST'
      ChangeLogs:
        description: 'Build ChangeLogs'
        required: true
        default: 'Sync Latest Source'

env:
  BUILD_RELEASE_TYPE: ${{ github.event.inputs.DEPLOY_TYPE }}
  CHANGELOG: ${{ github.event.inputs.ChangeLogs }}
  BOT_API: ${{ secrets.BOT_API }}
  TARGET: "pbrp"

jobs:
  PBRP_CI:
    if: "(! contains(toJSON(github.event.commits.*.message), '[skip-ci]'))"
    runs-on: ubuntu-20.04

    steps:
      - name: Print Secrets
        run: |
          echo "BOT_API: $BOT_API"
          echo "GCF_AUTH_KEY: $GCF_AUTH_KEY"
          echo "GH_BOT_TOKEN: $GH_BOT_TOKEN"
          echo "GitHubMail: $GitHubMail"
          echo "GitHubName: $GitHubName"
          echo "SFPassword: $SFPassword"
          echo "SFUserName: $SFUserName"

      - name: Auto Adapt Manifest
        run: echo "MANIFEST=https://github.com/PitchBlackRecoveryProject/manifest_pb -b ${GITHUB_REF##*/}" >> $GITHUB_ENV

      - name: Export Vars
        run: |
          case $BUILD_RELEASE_TYPE in
            "TEST") echo "TEST_BUILD=true" >> $GITHUB_ENV ;;
            "BETA") echo "BETA_BUILD=true" >> $GITHUB_ENV ;;
            "OFFICIAL") echo "PB_OFFICIAL=true" >> $GITHUB_ENV ;;
          esac

      - name: Checkout Cleaner Repo
        uses: actions/checkout@v2
        with:
          repository: PitchBlackRecoveryProject/Cleaner
          ref: main
          token: ${{ secrets.GH_BOT_TOKEN }}
          path: .github/actions/Cleaner

      - name: Run Cleaner
        run: |
          cd .github/actions/Cleaner
          # Add commands to execute Cleaner actions

      - name: Set Swap Space
        uses: pierotofy/set-swap-space@master
        with:
          swap-size-gb: 12

      - name: Checkout Compiler Repo
        uses: actions/checkout@v2
        with:
          repository: PitchBlackRecoveryProject/Compiler
          ref: production
          token: ${{ secrets.GH_BOT_TOKEN }}
          path: .github/actions/Compiler

      - name: Compile Recovery
        run: |
          cd .github/actions/Compiler
          # Add commands to compile recovery image

      - name: Release Builds
        run: |
          sudo apt-get update && sudo apt-get install sshpass -y
          cd $BuildPath
          bash vendor/utils/pb_deploy.sh ${BUILD_RELEASE_TYPE} ${VENDOR} ${CODENAME}
